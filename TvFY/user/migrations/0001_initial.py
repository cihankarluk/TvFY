# Generated by Django 4.0.4 on 2022-06-23 15:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("series", "0001_initial"),
        ("movies", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "account",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserMovies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        blank=True,
                        db_column="created_by",
                        editable=False,
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.CharField(
                        blank=True,
                        db_column="updated_by",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_column="updated_at"),
                ),
                ("is_watched", models.BooleanField(db_column="is_watched")),
                (
                    "is_going_to_watch",
                    models.BooleanField(db_column="is_going_to_watch"),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        db_column="movie",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="movies.movie",
                        to_field="tvfy_code",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        blank=True,
                        db_column="created_by",
                        editable=False,
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.CharField(
                        blank=True,
                        db_column="updated_by",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="created_at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_column="updated_at"),
                ),
                (
                    "last_watched_episode",
                    models.PositiveSmallIntegerField(db_column="last_watched_episode", null=True),
                ),
                ("is_watched", models.BooleanField(db_column="is_watched")),
                (
                    "is_going_to_watch",
                    models.BooleanField(db_column="is_going_to_watch"),
                ),
                (
                    "series",
                    models.ForeignKey(
                        db_column="series",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="series.series",
                        to_field="tvfy_code",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "watched_season",
                    models.ForeignKey(
                        db_column="watched_season",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="series.season",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "series", "watched_season")},
            },
        ),
    ]
